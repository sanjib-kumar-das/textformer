{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","components/Faq.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","xmlns","width","height","fill","class","viewBox","d","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","join","navigator","clipboard","writeText","filter","element","Alert","alert","msg","Faq","backgroundColor","aria-labelledby","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.f8d5135f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg border border-top-0 rounded-bottom border-light navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"40\"\r\n            height=\"40\"\r\n            fill={`${props.mode === \"light\" ? \"black\" : \"white\"}`}\r\n            class=\"bi bi-textarea-t\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M1.5 2.5A1.5 1.5 0 0 1 3 1h10a1.5 1.5 0 0 1 1.5 1.5v3.563a2 2 0 0 1 0 3.874V13.5A1.5 1.5 0 0 1 13 15H3a1.5 1.5 0 0 1-1.5-1.5V9.937a2 2 0 0 1 0-3.874V2.5zm1 3.563a2 2 0 0 1 0 3.874V13.5a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V9.937a2 2 0 0 1 0-3.874V2.5A.5.5 0 0 0 13 2H3a.5.5 0 0 0-.5.5v3.563zM2 7a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm12 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\" />\r\n            <path d=\"M11.434 4H4.566L4.5 5.994h.386c.21-1.252.612-1.446 2.173-1.495l.343-.011v6.343c0 .537-.116.665-1.049.748V12h3.294v-.421c-.938-.083-1.054-.21-1.054-.748V4.488l.348.01c1.56.05 1.963.244 2.173 1.496h.386L11.434 4z\" />\r\n          </svg>\r\n          <Link className=\"navbar-brand text-warning h1 px-5 \" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"faq\">\r\n                  FAQs\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div className=\"d-flex justify-content-end\">\r\n              <form className=\"d-flex flex-row\">\r\n                {/* <button className=\"btn btn-outline-warning\" type=\"submit\">\r\n                  Dark Mode\r\n  </button> */}\r\n                <div\r\n                  className={`form-check form-switch text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                >\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    onClick={props.toggleMode}\r\n                    type=\"checkbox\"\r\n                    role=\"switch\"\r\n                    id=\"flexSwitchCheckDefault\"\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label\"\r\n                    htmlFor=\"flexSwitchCheckDefault\"\r\n                  >\r\n                    Dark Mode\r\n                  </label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  // Functions\r\n  const OnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const UpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text Converted to Uppercase Successfull!!\", \"success\");\r\n  };\r\n  const DownClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text Converted to Lowercase Successfull!!\", \"success\");\r\n  };\r\n  const Clear = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!!\", \"danger\");\r\n  };\r\n  const CopyText = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text Copied to Clipboard!!\", \"primary\");\r\n  };\r\n  const ExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed!!\", \"warning\");\r\n  };\r\n  // States declaration\r\n  const [text, setText] = useState(\"Enter Your Text Here\");\r\n  return (\r\n    <>\r\n      <div className=\"container my-5\">\r\n        {/* Form to enter text */}\r\n        <div className=\"mb-3\">\r\n          <label\r\n            htmlFor=\"exampleFormControlTextarea1\"\r\n            className=\"form-label font-weight-bold\"\r\n          >\r\n            <h2\r\n              className=\"my-4\"\r\n              style={{\r\n                color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              }}\r\n            >\r\n              {props.heading}\r\n            </h2>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control bg-light my-4\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"10\"\r\n            value={text}\r\n            onChange={OnChange}\r\n          ></textarea>\r\n        </div>\r\n        {/* Buttons */}\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-warning my-3 mx-1\"\r\n          onClick={UpClick}\r\n        >\r\n          Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-warning my-3 mx-1\"\r\n          onClick={DownClick}\r\n        >\r\n          Lowercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary my-3 mx-1\"\r\n          onClick={ExtraSpace}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-success my-3 mx-1\"\r\n          onClick={CopyText}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-danger my-3 mx-1\"\r\n          onClick={Clear}\r\n        >\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <hr />\r\n      {/* Summary Part */}\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"whitesmoke\" : \"black\",\r\n        }}\r\n      >\r\n        <h3 className=\"textCount\">Summary</h3>\r\n        <div className=\"content my-4\">\r\n          <h5 className=\"wordSummary\">\r\n            Total Number of Words ={\" \"}\r\n            {\r\n              text.split(/\\s+/).filter((element) => {\r\n                return element.length !== 0;\r\n              }).length\r\n            }\r\n          </h5>\r\n          <h5 className=\"charSummary\">\r\n            Total Number of Characters = {text.length}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show my-3 mx-3`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{props.alert.msg}</strong>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Faq(props) {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <h2\r\n            className=\"heading my-4\"\r\n            style={{\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          >\r\n            {props.heading}\r\n          </h2>\r\n\r\n          <div\r\n            className=\"accordion-item\"\r\n            style={{\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            }}\r\n          >\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                <span>\r\n                  #1\r\n                  <strong>\r\n                    &nbsp; How can I transform my text to Uppercase ?\r\n                  </strong>\r\n                </span>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                First write/paste all your text intro the text-area and then\r\n                just press the 'Uppercase' button given below.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"accordion-item\"\r\n            style={{\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            }}\r\n          >\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                <span>\r\n                  {\" \"}\r\n                  #2\r\n                  <strong>\r\n                    &nbsp; How can I transform my text to Lowercase ?\r\n                  </strong>\r\n                </span>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                First write/paste all your text intro the text-area and then\r\n                just press the 'Lowercase' button given below.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"accordion-item\"\r\n            style={{\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            }}\r\n          >\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                <span>\r\n                  {\" \"}\r\n                  #3\r\n                  <strong>\r\n                    &nbsp; How can I remove Extra Spaces from my text ?\r\n                  </strong>\r\n                </span>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                First write/paste all your text intro the text-area and then\r\n                just press the 'Remove Extra Space' button given below.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"accordion-item\"\r\n            style={{\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            }}\r\n          >\r\n            <h2 className=\"accordion-header\" id=\"headingFour\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseFour\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseFour\"\r\n              >\r\n                <span>\r\n                  #4\r\n                  <strong>&nbsp; How can I copy my whole text ?</strong>\r\n                </span>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseFour\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                First perform any operation from the buttons given below and\r\n                then just press the 'Copy Text' button given below.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"accordion-item\"\r\n            style={{\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            }}\r\n          >\r\n            <h2 className=\"accordion-header\" id=\"headingFive\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseFive\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseFive\"\r\n              >\r\n                <span>\r\n                  #5\r\n                  <strong>\r\n                    &nbsp; How can I toggle between Dark & Light Mode ?\r\n                  </strong>\r\n                </span>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseFive\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingFive\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                Just tap on the button given in the top right corner to enable\r\n                'Dark Mode' and same to enable 'Light Mode'.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"accordion-item\"\r\n            style={{\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            }}\r\n          >\r\n            <h2 className=\"accordion-header\" id=\"headingSix\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseSix\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseSix\"\r\n              >\r\n                <span>\r\n                  #6\r\n                  <strong>&nbsp; How can I view the text summary ?</strong>\r\n                </span>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseSix\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingSix\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                First write/paste all your text intro the text-area and then\r\n                just scroll down to the section 'Summary'.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import favicon from \"../public\";\nimport React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Faq from \"./components/Faq\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been enabled\", \"info\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"info\");\n    }\n  };\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar title=\"TextFormer\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <Textform\n                heading=\"Welcome to TextFormer !!\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            }\n          ></Route>\n          <Route\n            exact\n            path=\"faq\"\n            element={<Faq title=\"FAQs\" mode={mode} heading=\"FAQs\" />}\n          />\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}